<?php

/**
 * Files containing list of functions for petty cash functionalities
 */
define('S_ADVANCE', 'salary advance');
define('E_ADVANCE', 'expenses advance');

/**
 * Implements hook_menu
 */
function leanbox_petty_cash_menu() {
   $items = array();
   $items['petty-cash/credit'] = array(
     'title' => 'Petty Cash Credit',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('upload_petty_cash_callback'),
     'access arguments' => array('upload petty cash'),
     'type' => MENU_CALLBACK,
     'file' => 'form/leanbox_petty_cash.form.inc',
   );
   $items['petty-cash/debit'] = array(
     'title' => 'Petty Cash Credit',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('upload_petty_cash_callback'),
     'access arguments' => array('upload petty cash'),
     'type' => MENU_CALLBACK,
     'file' => 'form/leanbox_petty_cash.form.inc',
   );
   $items['petty-cash-voucher/delete'] = array(
     'title' => 'Petty Cash Revert Voucher',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('revert_petty_cash_callback'),
     'access arguments' => array('upload petty cash'),
     'type' => MENU_CALLBACK,
     'file' => 'form/leanbox_petty_cash_voucher.form.inc',
   );
   $items['petty-cash-voucher/file-upload'] = array(
     'title' => 'Petty Cash Bill Upload',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('file_upload_petty_cash_callback'),
     'access arguments' => array('upload petty cash'),
     'type' => MENU_CALLBACK,
     'file' => 'form/leanbox_petty_cash_file.form.inc',
   );
   $items['voucher-no/list'] = array(
     'title' => 'Get List of logged in distributor voucher details',
     'page callback' => 'get_list_of_voucher_details',
     'access arguments' => array('upload petty cash'),
     'type' => MENU_CALLBACK,
   );
   $items['petty-cash-voucher/show-pdf'] = array(
     'title' => 'Petty Cash Details',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('_petty_cash_pdf_details_form'),
     'access arguments' => array('upload petty cash'),
     'type' => MENU_CALLBACK,
     'file' => 'form/leanbox_petty_cash.pdf.inc',
   );
   $items['petty-cash-voucher/generate-pdf/%'] = array(
     'title' => 'Petty Cash Revert Voucher',
     'page callback' => '_petty_cash_pdf_generate_form',
     'page arguments' => array(2),
     'access arguments' => array('upload petty cash'),
     'type' => MENU_CALLBACK,
     'file' => 'form/leanbox_petty_cash.pdf.inc',
   );
   return $items;
}

/**
 * Implement hook_permission()
 *  Add custom permission for petty cash
 */
function leanbox_petty_cash_permission() {
   return array(
     'upload petty cash' => array(
       'title' => t('upload petty cash'),
       'description' => t('upload petty cash for details')
     )
   );
}

/**
 * 
 * Implements hook_feeds_presave($source, $entity, $item)
 */
function leanbox_petty_cash_feeds_presave($source, $entity, $item, $entity_id) {
   foreach ($item as $key => $value) {
      $item[$key] = mb_convert_encoding($value, 'UTF-8', 'UTF-8');
   }
   if ($entity->feeds_item->id == 'petty_cash_master') {
      foreach ($item as $key => $val) {
         if ($key === 'type') {
            $field = field_info_field('field_petty_cash_type');
            $allowed_values = list_allowed_values($field);
            $val = strtolower($val);
            if (!array_key_exists($val, $allowed_values)) {
               drupal_set_message("Please enter correct value for type. Values should be in " . implode($allowed_values, ','), 'error');
               $entity->feeds_item->skip = TRUE;
            }
            else {
               $entity->field_petty_cash_type['und'][0]['value'] = $val;
            }
         }
      }
   }
}

/**
 * Implements hook_taxonomy_term_presave($term)
 * @param type $term
 */
function leanbox_petty_cash_taxonomy_term_presave($term) {
   if ($term->vocabulary_machine_name === 'petty_cash') {
      if (!isset($term->original->name) || ($term->original->name != $term->name)) {
         $user_id = $GLOBALS['user']->uid;
         $distributor_id = change_feeds_import_get_distributor_id($user_id);

         $term_type = $term->field_petty_cash_type['und'][0]['value'];
         $term_head = substr($term->field_petty_cash_head['und'][0]['value'], 0, 50);
         $term_subhead = substr($term->field_petty_cash_subhead['und'][0]['value'], 0, 50);
         $term->name = $term_type . "-" . $term_head . "-" . $term_subhead;
         $term->field_petty_cash_distributor['und'][0]['uid'] = $distributor_id;
      }
   }
}

/**
 * 
 * @param type $distributor_id
 */
function _get_latest_balance($distributor_id) {
   $res = 0;
   if (!empty($distributor_id)) {
      $query = db_select('petty_cash', 'cb');
      $query->addExpression('MAX(id)', 'max');
      $query->condition('distributor_id', $distributor_id);
      $max_billing_id_new = $query->execute()->fetchField();

      if (!empty($max_billing_id_new)) {
         $query = db_select('petty_cash', 'pc');
         $query->condition('pc.distributor_id', $distributor_id);
         $query->condition('pc.id', $max_billing_id_new);
         $query->fields('pc', array('balance'));
         $res = $query->execute()->fetchField();
      }
   }
   return $res;
}

/**
 * Menu callback; Retrieve a JSON object containing autocomplete suggestions for existing voucher no.
 * @param type $string
 */
function get_list_of_voucher_details($string = '') {
   $res = array();
   //$user_id = $GLOBALS['user']->uid;
   //$distributor_id = change_feeds_import_get_distributor_id($user_id);
   $distributor_ids = get_distributor_ids();
   $length = strlen($string);
   if ($length > 2) {
      if (!empty($distributor_ids) && !empty($string)) {
         $query = db_select('petty_cash', 'pc');
         $query->isNull('pc.voucher_reference_no');
         $query->isNull('pc.deleted');
         $query->condition('pc.distributor_id', $distributor_ids,'IN');
         $query->condition('pc.voucher_no', db_like($string) . '%', 'LIKE');
         $query->fields('pc', array('voucher_no'));
         $query->range(0, 10);
         $res = $query->execute()->fetchAllKeyed(0, 0);
      }
   }
   drupal_json_output($res);
}

function _update_unique_coupon($distributor_id,$facility_code) {
   $coupon_id = 0;
   if (!empty($distributor_id)) {
      $txn = db_transaction();
      $query = db_select('petty_cash_sequence_table', 'ts');
      $query->forUpdate();
      $query->addField('ts', 'next_id');
      $query->condition('ts.facility_code', $facility_code);
      $coupon_id = $query->execute()->fetchField();

      if ($coupon_id) {
// Increment the next_value.
         db_update('petty_cash_sequence_table')
             ->fields(array('next_id' => $coupon_id + 1))
             ->condition('facility_code', $facility_code)
             ->execute();
      }
      else {
         $coupon_id = 1;
         $insert = db_insert('petty_cash_sequence_table')
             ->fields(array(
           'facility_code' => $facility_code,
           'next_id' => $coupon_id + 1
         ));
         $insert->execute();
      }
   }
   return $coupon_id;
}

/**
 * 
 * @param type $distributor_id
 * @param type $voucher
 */
function _get_voucher_details_distributor_wise($distributor_ids, $voucher) {
   $output = array();
   if (!empty($distributor_ids) && !empty($voucher)) {
      $query = db_select('petty_cash', 'pc');
      $query->isNull('pc.voucher_reference_no');
      $query->isNull('pc.deleted');
      $query->condition('pc.distributor_id', $distributor_ids,'IN');
      $query->condition('pc.voucher_no', $voucher);
      $query->fields('pc', array('id', 'voucher_date', 'head', 'subhead', 'amount', 'person_name', 'bill_available', 'bill_no', 'type', 'description'));
      $query->leftjoin('file_managed', 'fm', 'fm.fid = pc.file');
      $query->leftjoin('file_managed', 'fm1', 'fm1.fid = pc.bill_file');
      $query->fields('fm', array('filename'));
      $query->fields('fm1', array('filename'));
      $rows = $query->execute()->fetchAll(PDO::FETCH_ASSOC);
      if (isset($rows[0]['filename'])) {
         $rows[0]['filename'] = l($rows[0]['filename'],'sites/default/files/'.$rows[0]['filename'], array('attributes' => array('target' => '_blank')));
      }
      if (isset($rows[0]['fm1_filename'])) {
         $rows[0]['fm1_filename'] = l($rows[0]['fm1_filename'],'sites/default/files/'.$rows[0]['fm1_filename'], array('attributes' => array('target' => '_blank')));
      }
// $rows[] = $res;
      $header = array(
        'Voucher date',
        'Head',
        'Subhead',
        'Amount',
        'Person name',
        'Bill available',
        'Bill no',
        'Type',
        'Description',
        'Voucher Copy',
        'Bill Copy',
      );
      if (isset($rows[0]['voucher_date'])) {
         $rows[0]['voucher_date'] = date('d-M-y', $rows[0]['voucher_date']);
      }
      $output['header'] = $header;
      $output['rows'] = $rows;
   }

   return $output;
}

/**
 * Implements of hook_views_api().
 */
function leanbox_petty_cash_views_api() {
   return array(
     'api' => 3,
     'path' => drupal_get_path('module', 'leanbox_petty_cash') . '/views'
   );
}

function _leanbox_petty_cash_pdf_details($voucher, $distributor_ids) {
   $html = '';
   if (!empty($voucher) && !empty($distributor_ids)) {
      $query = db_select('petty_cash', 'pc');
      $query->isNull('pc.voucher_reference_no');
      $query->isNull('pc.deleted');
      $query->condition('pc.distributor_id', $distributor_ids,'IN');
      $query->condition('pc.voucher_no', $voucher);
      $query->fields('pc', array('head'));
      $head = $query->execute()->fetchField();
      if (!empty($head)) {
         $html = theme('leanbox_petty_cash_pdf', array('voucher' => $voucher, 'distributor_id' => $distributor_id, 'head' => $head));
      }
   }
   return $html;
}

/**
 * Implements hook_theme
 */
function leanbox_petty_cash_theme() {
   return array(
     'leanbox_petty_cash_pdf' => array(
       'template' => 'leanbox-petty-cash-pdf',
       'variables' => array('voucher' => NULL, 'distributor_id' => NULL, 'head' => NULL,),
     ),
   );
}

/**
 * Implements template_preprocess_page().
 */
function leanbox_petty_cash_preprocess_leanbox_petty_cash_pdf(&$variables) {
// $output will always return single row
   $voucher = $variables['voucher'];
   $distributor_id = $variables['distributor_id'];
   $head = trim(strtolower($variables['head']));
   $distributor_ids = get_distributor_ids();
   $query = db_select('petty_cash', 'pc');
   $query->isNull('pc.voucher_reference_no');
   $query->condition('pc.distributor_id', $distributor_ids,'IN');
   $query->condition('pc.voucher_no', $voucher);
   if ($head == S_ADVANCE || $head == E_ADVANCE) {
      $query->fields('pc', array('voucher_no', 'voucher_date', 'head', 'subhead', 'amount', 'person_name', 'type', 'description'));
   }
   else {
      $query->fields('pc', array('voucher_no', 'voucher_date', 'head', 'subhead', 'amount', 'person_name', 'bill_available', 'bill_no', 'type', 'description'));
   }
   $res = $query->execute()->fetch(PDO::FETCH_ASSOC);

   $amount = $res['amount'];
   $person_name = $res['person_name'];

   if (!empty($res)) {
      if ($head == S_ADVANCE || $head == E_ADVANCE) {
         $header = array(
           'Voucher no',
           'Voucher date',
           'Head',
           'Subhead',
           'Amount',
           'Person name',
           'Type',
           'Description',
         );
      }
      else {
         $header = array(
           'Voucher no',
           'Voucher date',
           'Head',
           'Subhead',
           'Amount',
           'Person name',
           'Bill available',
           'Bill no',
           'Type',
           'Description',
         );
      }
      if (isset($res['voucher_date'])) {
         $res['voucher_date'] = date('d-M-y', $res['voucher_date']);
      }

      // logic to buil theme table
      foreach ($header as $key => $val) {
         $row = array();
         $row[] = $val;
         unset($header[$key]);
         foreach ($res as $key1 => $val1) {
            $row[] = $val1;
            unset($res[$key1]);
            break;
         }
         $rows[] = $row;
      }


      $html = theme('table', array(
        'header' => array(),
        'rows' => $rows,
        'attributes' => array('border' => '1', 'cellpadding' => '5', 'cellspacing' => '0'),
      ));
      if ($head == S_ADVANCE || $head == E_ADVANCE) {
         $variables['header1'] = "IOU Voucher";
      }
      else {
         $variables['header1'] = "Cash Voucher";
      }
      $user_details = leanbox_dashboard_get_username_and_rs_code($distributor_id);

// RS Name
      $variables['header2'] = $user_details['field_name_value'];

// footer 1
      $variables['footer1'] = t("I have received the sum of $amount");

// footer 4 & 5
      $variables['footer4'] = t('Receiver Signature');
      $variables['footer5'] = t("$person_name");

// body
      $variables['body_data'] = $html;

// footer 2 & 3 & body below 
      if ($head == S_ADVANCE || $head == E_ADVANCE) {
         $variables['footer2'] = t('I/We Declared that will refund this amount Or Handover Expense Voucher for same.');
         $variables['footer3'] = t('If the amount is not refunded , then same would be recovered from Salary  Payment.');
      }
      else {
         $variables['footer2'] = t('');
         $variables['footer3'] = t('');
      }
   }
}

function leanbox_petty_cash_form_views_exposed_form_alter(&$form, &$form_state) {
  // unset all fields except empty and not empty for voucher copy
  if ($form['#id'] == 'views-exposed-form-petty-cash-transaction-page') {
    $select = array('' => '- Any -');
    $select1 = array('=' => '- Any -');
    if (isset($form['filename_op'])) {
      unset($form['filename_op']['#options']);
      $form['filename_op']['#options'] = $select1; 
      $form['filename_op']['#options']['empty'] = 'Empty';
      $form['filename_op']['#options']['not empty'] = 'Not Empty';
      $form['filename']['#type'] = 'hidden';
    }
    // unset all fields except empty and not empty for bill copy
    if (isset($form['filename_1_op'])) {
      unset($form['filename_1_op']['#options']);
      $form['filename_1_op']['#options'] = $select1;
      $form['filename_1_op']['#options']['empty'] = 'Empty';
      $form['filename_1_op']['#options']['not empty'] = 'Not Empty';
      $form['filename_1']['#type'] = 'hidden';
    }
    //dropdowns
    $type = get_pettycash_type();
    $type = $select + $type;
    if (isset($form['type'])) {
      $form['type']['#type'] = 'select';
      $form['type']['#size'] = null;
      $form['type']['#options'] = $type;
    } 
    $head = get_pettycash_head();
    $head = $select + $head;
    if (isset($form['head'])) {
      $form['head']['#type'] = 'select';
      $form['head']['#size'] = null;
      $form['head']['#options'] = $head;
    }
    $subhead = get_pettycash_subhead();
    $subhead = $select + $subhead;
    if (isset($form['subhead'])) {
      $form['subhead']['#type'] = 'select';
      $form['subhead']['#size'] = null;
      $form['subhead']['#options'] = $subhead;
    }
  }
}

function get_pettycash_type() {
  //$user_id = $GLOBALS['user']->uid;
 // $distributor_id = change_feeds_import_get_distributor_id($user_id);
  $query = db_select('field_data_field_petty_cash_type', 'ct');
  $query->join('field_data_field_petty_cash_distributor', 'd', 'd.entity_id = ct.entity_id');
 // $query->condition('d.field_petty_cash_distributor_uid', $distributor_id);
  $query->fields('ct', array('field_petty_cash_type_value'));
  $res = $query->execute()->fetchAllKeyed(0,0);
  return $res;
}

function get_pettycash_head() {
  $user_id = $GLOBALS['user']->uid;
  //$distributor_id = change_feeds_import_get_distributor_id($user_id);
  $query = db_select('field_data_field_petty_cash_head', 'ch');
  $query->join('field_data_field_petty_cash_distributor', 'd', 'd.entity_id = ch.entity_id');
 // $query->condition('d.field_petty_cash_distributor_uid', $distributor_id);
  $query->fields('ch', array('field_petty_cash_head_value'));
  $res = $query->execute()->fetchAllKeyed(0,0);
  return $res;
}
function get_pettycash_subhead() {
  //$user_id = $GLOBALS['user']->uid;
  //$distributor_id = change_feeds_import_get_distributor_id($user_id);
  $query = db_select('field_data_field_petty_cash_subhead', 'cs');
  $query->join('field_data_field_petty_cash_distributor', 'd', 'd.entity_id = cs.entity_id');
 // $query->condition('d.field_petty_cash_distributor_uid', $distributor_id);
  $query->fields('cs', array('field_petty_cash_subhead_value'));
  $res = $query->execute()->fetchAllKeyed(0,0);
  return $res;
}
