<?php

/**
 * Files containing functions for sku cp
 */

/**
 * Implements hook_menu
 */
function leanbox_sku_cp_menu() {
   $items = array();
   $items['sku-cp-assign'] = array(
     'title' => 'SKU CP',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('_assign_sku_cp_callback'),
     'access arguments' => array('sku cp'),
     'type' => MENU_CALLBACK,
     'file' => 'form/leanbox_sku_cp.form.inc',
   );
   $items['sku-product-listing'] = array(
     'title' => 'SKU Product Name',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('_add_sku_product_validation_word_callback'),
     'access arguments' => array('sku upload validation'),
     'type' => MENU_CALLBACK,
     'file' => 'form/leanbox_sku_cp.form.inc',
   );
   $items['sku-list'] = array(
     'title' => 'Get List of logged in distributor sku',
     'page callback' => 'get_list_of_sku',
     'access arguments' => array('sku cp'),
     'type' => MENU_CALLBACK,
   );
  // Upload form for sales register data
  $items['sku-ean-mrp/import'] = array(
    'title' => 'Import SKU7 EAN and MRP',
    'description' => 'Import SKU7 EAN and MRP',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sku_ean_mrp_feeds_import_form'),
    'access arguments' => array('Distributor Upload File'),
    'file' => 'form/sku_ean_mrp.inc',
  );   
   return $items;
}

/**
 * Implement hook_permission()
 *  Add custom permission Central sales delivery report
 */
function leanbox_sku_cp_permission() {
   return array(
     'sku cp' => array(
       'title' => t('sku cp'),
       'description' => t('sku cp assignment')
     ),
     'sku upload validation' => array(
       'title' => t('sku upload validation'),
       'description' => t('sku upload validation')
     )
   );
}

/**
 * Implements of hook_views_api().
 */
function leanbox_sku_cp_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'leanbox_sku_cp') . '/views'
  );
}

/**
 * Menu callback; Retrieve a JSON object containing autocomplete suggestions for existing bill no.
 * @param type $string
 */
function get_list_of_sku($string = '') {
   global $user;
   $res = '';
   // Store distributor id in author in each node
   $dis_id = change_feeds_import_get_distributor_id($user->uid);
   $length = strlen($string);
   if ($length > 2) {
      if (!empty($dis_id) && !empty($string)) {
         $query = db_select('node', 'n');
         // $query->join('field_data_field_trip_id_reference', 'tr', 'tr.entity_id = n.nid');
         $query->condition('n.type', 'sku7_code_master');
         $query->condition('n.uid', $dis_id);
         $query->condition('n.title', db_like($string) . '%', 'LIKE');
         $query->fields('n', array('title'));
         $query->range(0, 10);
         $res = $query->execute()->fetchAllKeyed(0, 0);
      }
   }
   drupal_json_output($res);
}

/**
 * 
 * @param type $sku
 * @param type $distributor_id
 * @param type $child
 * @return array
 */
function _get_sku_details_using_sku_id($sku, $distributor_id, $child = FALSE) {
   $array = array();
   if (!empty($sku) && !empty($distributor_id)) {
      $query = db_select('node', 'n');
      $query->join('field_data_field_product_name', 'pn', 'pn.entity_id = n.nid');
      $query->condition('n.type', 'sku7_code_master');
      $query->condition('n.uid', $distributor_id);
      $query->condition('n.title', $sku);
      $query->fields('n', array('nid', 'title'));
      $query->fields('pn', array('field_product_name_value'));
      if (!$child) {
         $query->leftjoin('field_data_field_child_sku', 'csk', 'csk.entity_id = n.nid');
         $query->fields('csk', array('field_child_sku_nid'));
         $query->leftjoin('field_data_field_child_sku_qty‎', 'cskq', 'cskq.entity_id = n.nid');
         $query->fields('cskq', array('field_child_sku_qty_value'));
      }
      $row = $query->execute()->fetch(PDO::FETCH_ASSOC);
      $rows[] = $row;
      if (!empty($rows)) {
         $header = array(
           'sku' => 'Sku',
           'name' => 'Product Name',
         );
         if ($child) {
            $header = array(
              'sku' => 'Child Sku',
              'name' => 'Child Product Name',
            );
         }
         $array['header'] = $header;
         $array['rows'] = $rows;
      }
   }

   return $array;
}

/**
 * Implements hook_menu_alter
 * @param array $items
 */
function leanbox_sku_cp_menu_alter(&$items) {
   $items['import/%feeds_importer']['page callback'] = '_get_feeds_url_for_sku_callabck';
}

/**
 * 
 * @global type $user
 * @param type $callback_arg1
 * @param type $arg2
 * @return type
 */
function _get_feeds_url_for_sku_callabck($callback_arg1, $arg2) {
   GLOBAL $user;
   $roles = $user->roles;
   $url_arg0 = arg(0);
   $url_arg = arg(1);
   if (in_array('leanbox', $roles)) {
      if ($url_arg0 == 'import' && $url_arg == 'sku7_code_master') {
         drupal_goto('import/sku7_code_master_leanbox');
      }
   }
   module_load_include('inc', 'feeds', 'feeds.pages.inc');
   return drupal_get_form($callback_arg1, $arg2);
}


/**
 * Implements hook_entity_info().
 */
function leanbox_sku_cp_entity_info() {

  $info = array();

  $info['sku_ean_mrp'] = array(
    'label' => t('SKU EAN MAP Entity'),
    'base table' => 'sku_ean_mrp',
    'entity keys' => array(
      'id' => 'id',
    ),
  );

  return $info;
}