<?php

/**
 * 
 * @param FeedsSource $source
 * Implements hook_feeds_after_import(FeedsSource $source)
 */
function change_feeds_import_feeds_after_import(FeedsSource $source) {
  if ($source->id == 'billing_data') {
    $query = db_select('node', 'n');
    $query->innerjoin('field_data_field_vehicle', 'v', 'v.entity_id = n.nid');
    $query->innerjoin('field_data_field_loading_date', 'l', 'l.entity_id = n.nid');
    $query->innerjoin('field_data_field_sku7_code', 's', 's.entity_id = n.nid');
    $query->innerjoin('field_data_field_sum_of_total_sales_qty', 't', 't.entity_id = n.nid');
    $query->fields('v', array('field_vehicle_value'));
    $query->fields('l', array('field_loading_date_value'));
    $query->fields('s', array('field_sku7_code_value'));
    $query->fields('t', array('field_sum_of_total_sales_qty_value'));
    $query->fields('n', array('created', 'nid'));
    $query->condition('n.type', 'billing_data');
    $result = $query->execute()->fetchAll();

    foreach ($result as $key => $value) {
      $vehicle = $value->field_vehicle_value;
      $loading_date = $value->field_loading_date_value;
      $sku = $value->field_sku7_code_value;
      $total_qty = $value->field_sum_of_total_sales_qty_value;
      $unique = "unique";
      $total = "total";
      $created = $value->created;
      if (isset($res[$vehicle . "/" . $loading_date . "/" . $created])) {
        $res[$vehicle . "/" . $loading_date . "/" . $created]['sku_count'] ++;
        $res[$vehicle . "/" . $loading_date . "/" . $created]['total_count'] += $total_qty;
        $unique_sku_string = $vehicle . "" . $loading_date . "" . $sku;
        if ($temp_unique_sku_string != $unique_sku_string) {
          $res[$vehicle . "/" . $loading_date . "/" . $created]['unique_count'] ++;
          $temp_unique_sku_string = $vehicle . "" . $loading_date . "" . $sku;
        }
      }
      else {
        $res[$vehicle . "/" . $loading_date . "/" . $created] = array();
        $res[$vehicle . "/" . $loading_date . "/" . $created]['sku_count'] = 1;
        $res[$vehicle . "/" . $loading_date . "/" . $created]['total_count'] = $total_qty;
        $temp_unique_sku_string = $vehicle . "" . $loading_date . "" . $sku;
        $res[$vehicle . "/" . $loading_date . "/" . $created]['unique_count'] = 1;
      }
    }

    foreach ($res as $key => $val) {
      global $user;
      $rr = explode("/", $key);
      $vehicle = $rr[0];
      $loading_date = $rr[1];
      $created_date = date('Y-m-d H:i:s', $rr[2]);
      $distint_sku_count = $val['unique_count'];
      $sku_count = $val['sku_count'];
      $total_qty_count = $val['total_count'];
      $node = new stdClass();
      $node->title = $vehicle . format_date(time());
      $node->type = "party_packing";
      node_object_prepare($node); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
      $node->language = LANGUAGE_NONE; // Or e.g. 'en' if locale is enabled
      $node->uid = $user->uid;
      $node->status = 1; //(1 or 0): published or not
      $node->comment = 1; // 0 = comments disabled, 1 = read only, 2 = read/write
      // Term reference (taxonomy) field

      $node->field_party_packing_vehicle[$node->language][0]['value'] = $vehicle;
      $node->field_party_packing_loading_date[$node->language][0]['value'] = $loading_date;
      $node->field_party_packing_date[$node->language][0]['value'] = $created_date;
      $node->field_loading_sheet_line[$node->language][0]['value'] = $distint_sku_count;
      $node->field_bill_lines[$node->language][0]['value'] = $sku_count;
      $node->field_each_units[$node->language][0]['value'] = $total_qty_count;

      $node = node_submit($node); // Prepare node for saving
      node_save($node);
    }
  }
}
