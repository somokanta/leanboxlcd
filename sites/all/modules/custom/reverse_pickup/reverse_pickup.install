<?php

/*
 * Implement hook_schema.
 */

function reverse_pickup_schema() {

  $schema['order_receive_data'] = array(
    'description' => 'Landing table for Reverse Pickup Data',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for a data',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'order_creation_date' => array(
       'description' => 'Order Creation Date',
       'type' => 'int',
       'not null' => TRUE,
       'default' => 0,
      ),
      'parent_bill_number' => array(
        'description' => t('Parent Bill Number'),
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'default' => '',
      ),
      'child_order_id' => array(
        'description' => t('Child Order ID'),
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'default' => '',
      ),
      'order_type' => array(
       'description' => t('Order Type'),
       'type' => 'varchar',
       'length' => 50,
       'not null' => TRUE,
       'default' => '',
      ), 
      'parent_party_code' => array(
        'description' => t('Parent Party Code'),
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'default' => '',
      ), 
     'party_code' => array(
        'description' => t('Party Code'),
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'default' => '',
      ),
     'distributor_id' => array(
        'description' => 'Distributor ID',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
     'lb_sku_id' => array(
        'description' => 'LB SKU ID',
        'type' => 'varchar',
        'length' => 100,
        'not null' => FALSE,
        'default' => '',
      ),  
      'pkd' => array(
        'description' => 'PKD',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'sku7_code' => array(
        'description' => t('SKU7 Code'),
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
        'default' => '',
      ),
      'product_name' => array(
        'description' => 'PRODUCT NAME',
        'type' => 'varchar',
        'length' => 255,
      ),
      'mrp' => array(
        'description' => t('MRP'),
        'type' => 'varchar',
        'length' => 25,
        'not null' => TRUE,
        'default' => '',
      ),
      'return_qty' => array(
        'description' => t('Return Qty'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created_time' => array(
       'description' => 'Created Time',
       'type' => 'int',
       'not null' => TRUE,
       'default' => 0,
      ), 
     'type' => array(
       'description' => '0 API 1 Uploader',
       'type' => 'int',
       'size' => 'tiny',
       'not null' => TRUE,
       'default' => 0,
     ),
     'beat_name' => array(
        'description' => t('Beat Name'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
     'flag' => array(
       'description' => 'Flag',
       'type' => 'int',
       'size' => 'tiny',
       'not null' => TRUE,
       'default' => 0,
     ),  
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

function reverse_pickup_update_7001() {
    $fields = array(
     'ean_code' => array(
        'description' => 'EAN',
        'type' => 'varchar',
        'length' => 25,
        'not null' => TRUE,
        'default' => '',
      ),
      'crate_id' => array(
        'description' => 'Crate ID',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
    ),    
  );
  foreach ($fields as $key => $field) {
    if (!db_field_exists('order_receive_data', $key)) {
      db_add_field('order_receive_data', $key, $field);
    }
  }
  
    $fields1 = array(
     'lb_sku_id' => array(
        'description' => 'LB SKU ID',
        'type' => 'varchar',
        'length' => 100,
        'not null' => FALSE,
        'default' => '',
      ), 
  );
  foreach ($fields1 as $key => $field) {
    if (!db_field_exists('dispatch_planning_item_details', $key)) {
      db_add_field('dispatch_planning_item_details', $key, $field);
    }
  }
}

function reverse_pickup_update_7002() {
    $schema['scan_code'] = array(
    'description' => 'Landing table for Scan Code Data',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for a data',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'ean_code' => array(
        'description' => 'EAN',
        'type' => 'varchar',
        'length' => 25,
        'not null' => TRUE,
        'default' => '',
      ),
      'pkd' => array(
        'description' => 'PKD',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'qty' => array(
        'description' => t('Qty'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'item_details_reference' => array(
        'description' => t('Item details reference'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created_time' => array(
       'description' => 'Created Time',
       'type' => 'int',
       'not null' => TRUE,
       'default' => 0,
      ),  
    ),
    'primary key' => array('id'),
  );
 
  db_create_table('scan_code', $schema['scan_code']);
}

function reverse_pickup_update_7003() {
    $schema['oms_api_log'] = array(
    'description' => 'Describes Api log for OMS API',
    'fields' => array(
      'id' => array(
        'description' => 'Id Primary Key',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'received_data' => array(
        'description' => 'Received Data',
        'type' => 'text',
        'size'=> 'medium',
      ),
      'response_data' => array(
        'description' => 'API Response',
        'type' => 'text',
        'size'=> 'medium',
      ),
      'request_time' => array(
        'description' => 'API Request time',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('id'),
  );
 
  db_create_table('oms_api_log', $schema['oms_api_log']);
}

function reverse_pickup_update_7004() {
  $fields = array(
     'external_dis_id' => array(
        'description' => 'External Distributor ID',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),  
  );
  foreach ($fields as $key => $field) {
    if (!db_field_exists('order_receive_data', $key)) {
      db_add_field('order_receive_data', $key, $field);
    }
  }
}

function reverse_pickup_update_7005() {
    $fields = array(
       'scan_qty' => array(
        'description' => t('Scan Qty'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
       ),  
    );
  foreach ($fields as $key => $field) {
    if (!db_field_exists('order_receive_data', $key)) {
      db_add_field('order_receive_data', $key, $field);
    }
  }
}

