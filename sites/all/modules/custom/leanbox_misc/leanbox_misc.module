<?php

function leanbox_misc_menu() {
  $items['pdd/add'] = array(
    'title' => 'PDD',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pdd_add_form'),
    'access arguments' => array('dispatch planning screen'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/pdd_holiday_master.inc',
      // Page callback, etc. need to be added here.
  );
  $items['pdd/add/pdd'] = array(
    'title' => 'PDD',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
    'file' => 'includes/pdd_holiday_master.inc',
      // Access callback, page callback, and theme callback will be inherited
      // from 'admin/config/system/foo', if not specified here to override.
  );
  $items['pdd/add/holiday'] = array(
    'title' => 'Holiday List',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('holiday_add_form'),
    'access arguments' => array('dispatch planning screen'),
    'weight' => 2,
    'file' => 'includes/pdd_holiday_master.inc',
      // Page callback and theme callback will be inherited from
      // 'admin/config/system/foo', if not specified here to override.
      // Need to add access callback or access arguments.
  );
    
  $items['van-stop-master'] = array(
    'title' => 'Outlets Per Van/Stop Master',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('van_stop_master_form'),
    'access arguments' => array('dispatch planning screen'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function leanbox_misc_block_info() {
  $blocks['distributor_name'] = array(
    'info' => t('Distributor Name'),
    'cache' => DRUPAL_CACHE_PER_USER
  );

  return $blocks;
}

function leanbox_misc_block_view($delta = '') {
  switch ($delta) {
    case 'distributor_name':

      global $user;
      $user_id = $user->uid;
      if (!$user_id) {
        return;
      }
      $distributor_id = change_feeds_import_get_distributor_id($user_id);
      $distributor_name = change_feeds_import_get_distributor_name($distributor_id);

      $block['subject'] = NULL;
      $block['content'] = array(
        '#markup' => '<div id="dist-name">' . t($distributor_name) . '</div>',
      );
      break;
  }
  return $block;
}

function van_stop_master_form($form, &$form_state) {
  require_once drupal_get_path('module', 'change_feeds_import') . '/form/upload_billing_data.inc';

  global $user;
  $user_id = $user->uid;
  $distributor_id = change_feeds_import_get_distributor_id($user_id);
  $nid = $form_state['leanbox_misc']['nid'] = check_node_title_exists($distributor_id, 'van_stop_master');

  if ($nid) {
    $node = node_load($nid);
    $stop_size = $node->field_stop_size[LANGUAGE_NONE][0]['value'];
    $delivery_per_van = $node->field_del_per_van[LANGUAGE_NONE][0]['value'];
    $pp_finish_time = $node->field_pp_finish_time[LANGUAGE_NONE][0]['value'];
    $picking_finish_time = $node->field_picking_finish_time[LANGUAGE_NONE][0]['value'];
  }

  $form['stop_size'] = array(
    '#type' => 'textfield',
    '#title' => t('Stop size'),
    '#required' => TRUE,
    '#element_validate' => array('element_validate_integer_positive'),
    '#default_value' => $stop_size,
  );
  
  $form['delivery_per_van'] = array(
    '#type' => 'textfield',
    '#title' => t('Delivery per Van'),
    '#required' => TRUE,
    '#element_validate' => array('element_validate_integer_positive'),
    '#default_value' => $delivery_per_van,
  );
  
  $form['pp_finish_time'] = array(
    '#type' => 'textfield',
    '#title' => t('PP finish time'),
    '#required' => TRUE,
    '#default_value' => $pp_finish_time,
  );
  
  $form['picking_finish_time'] = array(
    '#type' => 'textfield',
    '#title' => t('Picking finish time'),
    '#required' => TRUE,
    '#default_value' => $picking_finish_time,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );

  return $form;
}

function van_stop_master_form_submit($form, &$form_state) {
  global $user;
  $user_id = $user->uid;
  $distributor_id = change_feeds_import_get_distributor_id($user_id);

  if (empty($form_state['leanbox_misc']['nid'])) {
    $node = new stdClass();
    $node->title = $distributor_id;
    $node->type = "van_stop_master";
    node_object_prepare($node); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
    $node->language = LANGUAGE_NONE; // Or e.g. 'en' if locale is enabled
    $node->uid = $distributor_id;
    $node->status = 1; //(1 or 0): published or not
    $node->comment = 0; // 0 = comments disabled, 1 = read only, 2 = read/write

    $node->field_stop_size[LANGUAGE_NONE][0]['value'] = $form_state['values']['stop_size'];
    $node->field_del_per_van[LANGUAGE_NONE][0]['value'] = $form_state['values']['delivery_per_van'];
    $node->field_picking_finish_time[LANGUAGE_NONE][0]['value'] = $form_state['values']['picking_finish_time'];
    $node->field_pp_finish_time[LANGUAGE_NONE][0]['value'] = $form_state['values']['pp_finish_time'];

    node_save($node);
  }
  else {
    $node = node_load($form_state['leanbox_misc']['nid']);

    $node->field_stop_size[LANGUAGE_NONE][0]['value'] = $form_state['values']['stop_size'];
    $node->field_del_per_van[LANGUAGE_NONE][0]['value'] = $form_state['values']['delivery_per_van'];
    $node->field_picking_finish_time[LANGUAGE_NONE][0]['value'] = $form_state['values']['picking_finish_time'];
    $node->field_pp_finish_time[LANGUAGE_NONE][0]['value'] = $form_state['values']['pp_finish_time'];

    node_save($node);
  }
}